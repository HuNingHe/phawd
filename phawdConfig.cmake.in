STRING(REPLACE "/lib/cmake/phawd" "" PHAWD_PATH ${phawd_DIR})

FIND_PATH(PHAWD_INCLUDE_DIR phawd/phawd.h
    PATHS
    "${PHAWD_PATH}/include"
    NO_DEFAULT_PATH
    REQUIRED
)

IF(WIN32)
    FIND_LIBRARY(PHAWD_STATIC_LIB phawd
        PATHS
        "${PHAWD_PATH}/lib"
        NO_DEFAULT_PATH
    )
    IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        FIND_FILE(PHAWD_SHARED_LIB NAMES libphawd.dll
            PATHS
            "${PHAWD_PATH}/bin"
            NO_DEFAULT_PATH
        )
    ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        FIND_FILE(PHAWD_SHARED_LIB NAMES phawd.dll
            PATHS
            "${PHAWD_PATH}/bin"
            NO_DEFAULT_PATH
        )
    ENDIF()
ELSEIF(UNIX)
    FIND_LIBRARY(PHAWD_STATIC_LIB NAMES libphawd.a
        PATHS
        "${PHAWD_PATH}/lib"
        NO_DEFAULT_PATH
    )
    FIND_LIBRARY(PHAWD_SHARED_LIB phawd
        PATHS
        "${PHAWD_PATH}/lib"
        NO_DEFAULT_PATH
    )
ENDIF()

IF(PHAWD_INCLUDE_DIR AND PHAWD_STATIC_LIB AND PHAWD_SHARED_LIB)
    SET (PHAWD_FOUND TRUE)
ELSE(PHAWD_INCLUDE_DIR AND PHAWD_STATIC_LIB AND PHAWD_SHARED_LIB)
    IF(PHAWD_FIND_REQUIRED)
        MESSAGE(SEND_ERROR " Could not find PHAWD.")
        MESSAGE(SEND_ERROR " Try setting phawd_DIR force CMake to use the desired directory.")
    ELSE(PHAWD_FIND_REQUIRED)
        MESSAGE(STATUS " Could not find PHAWD.")
        MESSAGE(STATUS " Try setting phawd_DIR force CMake to use the desired directory.")
    ENDIF(PHAWD_FIND_REQUIRED)
ENDIF(PHAWD_INCLUDE_DIR AND PHAWD_STATIC_LIB AND PHAWD_SHARED_LIB)

MARK_AS_ADVANCED(
    PHAWD_INCLUDE_DIR
    PHAWD_STATIC_LIB
    PHAWD_SHARED_LIB
)

MESSAGE(STATUS "PHAWD_INCLUDE_DIR found at ${PHAWD_INCLUDE_DIR}")
MESSAGE(STATUS "PHAWD_STATIC_LIB found at ${PHAWD_STATIC_LIB}")
MESSAGE(STATUS "PHAWD_SHARED_LIB found at ${PHAWD_SHARED_LIB}")

INCLUDE("${CMAKE_CURRENT_LIST_DIR}/phawd-targets.cmake")
